<script type="text/javascript">
  
    var variant = [];
    {% for variant in product.variants %}
  		variant[] = {id:{{ variant.id }}, option1:'{{ variant.option1 }}', option2:'{{ variant.option2 }}', option3:'{{ variant.option3 }}', stock:'{{ variant.inventory_quantity }}'};
    {% endfor %}
	console.log(variant);
    this.addEventListener('change', this.onVariantChange);
    function onVariantChange() 
	{
		var selectObjects = document.getElementsByClassName('select__select');
		var filterItems = {};
  		Array.prototype.forEach.call(selectObjects, function(selectObject, i) {
    		var itemString = "option"+i;
    		filterItems[itemString] = selectObject.value;
  		});
    	console.log(variant);
  		/*
        result = variant.filter(function(item) {
          for (var key in filterItems) {
            if (item[key] === undefined || item[key] != filter[key])
              return false;
          }
          return true;
        });
        */
		//const result = selectObjects[0].value
		//const result = variant.filter(option1 => selectObjects[0].value);                
		//console.log(result);
        
	}
</script>

<script type="text/javascript">
  /*
  function removeParams(sParam)
  {
    var url = window.location.href.split('?')[0]+'?';
    var sPageURL = decodeURIComponent(window.location.search.substring(1)),
        sURLVariables = sPageURL.split('&'),
        sParameterName,
        i;

    for (i = 0; i < sURLVariables.length; i++) {
      sParameterName = sURLVariables[i].split('=');
      if (sParameterName[0] != sParam) {
        url = url + sParameterName[0] + '=' + sParameterName[1] + '&'
      }
    }
    return url.substring(0,url.length-1);
  }
  
  // Global Stuff
  const queryString = window.location.search;
  const urlParams = new URLSearchParams(queryString);
  // Show available stock
  var stock = [];
  {% for variant in product.variants %}
  	stock[{{ variant.id }}] = {{ variant.inventory_quantity }};
  {% endfor %}

  if(urlParams.has('variant')) {
    
    window.variantId = urlParams.get('variant');
    console.log(window.variantId);
  	onVariantChange();
  }

  this.addEventListener('change', this.onVariantChange);

  function onVariantChange() {
    var element = document.getElementById('stock-level');
	
    if(typeof window.variantId !== 'undefined'){
      
      var msg = msgText(stock[window.variantId]);

      element.innerHTML = msg;
    } else {
      var url = removeParams('variant');
      window.history.pushState("", "", url);
      element.innerHTML = "";
    }
  }

  function msgText(stockLevel) {
    var text = "Sold out!";
    if(stockLevel > 10) {
      text = "More than 10 available";
    } else {
      text = "Only " + stockLevel + " left!";
    }
    return text;
  }

  // Ask user to select an option
  var selectObjects = document.getElementsByClassName('select__select');
  
  Array.prototype.forEach.call(selectObjects, function(selectObject) {
    optionText = selectObject.name;
    optionText = optionText.match(/\[(.*?)\]/)[1];
    
    var x = document.getElementById(selectObject.id);
    var option = document.createElement("option");
    option.text = "Select " + optionText + "...";
    if(!urlParams.has('variant')) {
		option.selected = true;
    }
    x.add(option, x[0]);
  });
  */
</script>