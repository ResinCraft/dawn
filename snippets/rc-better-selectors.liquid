<script type="text/javascript">
    var productOptionNames = [];
    var productOptionValues = [];
    {% for product_option in product.options_with_values %}
        productOptionNames.push("{{ product_option.name | replace: '"', '\\"' }}");
    {% endfor %}

    var variants = [];
    {% for variant in product.variants %}
		variants.push({id: {{variant.id}}, option1: "{{variant.option1 | replace: '"', '\\"'}}", option2: "{{variant.option2 | replace: '"', '\\"'}}", option3: "{{variant.option3 | replace: '"', '\\"'}}"});
    {% endfor %}

    //console.log('productOptionNames: '+productOptionNames);
    //console.log('productOptionValues: '+productOptionValues[0]);
  	//var result = variants.find( ({ option1 }) => option1 === '12mm (1/2 in.)' );
    //console.log('variants: '+JSON.stringify(variants));
    
    function setDefaultOption(select)
    {
        selectName = select.name;
        optionText = "Select " + selectName.match(/\[(.*?)\]/)[1] + "..."

        //build the option that is going to be inserted into the drop down box
        var option = document.createElement("option");
        option.text = optionText;

        //only trigger this option if there is no pre-selected variant. i.e. the url doesn't have a "?variant=1234" value.
        const urlParams = new URLSearchParams(window.location.search);
        if(!urlParams.has('variant')) {
            option.selected = true;
        }

        //add the option to the selector at the top
        select.add(option, select[0]);
    }


    function removeOptions(selectElement) {
         var i, L = selectElement.options.length - 1;
         for(i = L; i >= 0; i--) {
         	selectElement.remove(i);
         }
    }

  	function findSelectIndex(select){
        selectName = select.name;
        optionText = selectName.match(/\[(.*?)\]/)[1];
        selectorIndex = productOptionNames.indexOf(optionText);
    }
  
    function findOptions(select) {

      	parent = selects[selectorIndex - 1].value;
        console.log('option: '+option);
        console.log('searchString: '+parent);
		//var selectVariants = variants.filter((({ option1 }) => option1 === searchString));
      	var selectVariants = variants.filter((item)=>item[option] === parent);
      	console.log('selectVariants: '+JSON.stringify(selectVariants));
      	return selectVariants;
    }
  
    function buildOptions(select)
    {
        var options = findOptions(select);
      	removeOptions(select);
        var selectVariants = variants.filter((({ option1 }) => option1 === parent));
      	Array.prototype.forEach.call(selectVariants, function(variants) {
          	Array.prototype.forEach.call(variants, function(variant) {
				/*var option = document.createElement("option");
              	option.text = variant.value;
              	select.add(option);				*/
              	console.log('variants: '+JSON.stringify(variant));
			});
        });
        //console.log('select: '+select);
        //console.log('parent: '+parent);;
      	/*
        removeOptions(select);
        Array.prototype.forEach.call(select, function(option, i) {
          	var result = undefined;
            console.log('option2-'+i+': '+option.value);
          	//console.log('option1-'+i+': '+parent);
          	result = variants.filter((({ option1 }) => option1 === parent));
          	//console.log('parent'+i+': '+JSON.stringify(result));
          	result = result.find((({ option2 }) => option2 === option.value));
          	console.log('result'+i+': '+JSON.stringify(result));
            if(result){
              	console.log('adding');
				var option = document.createElement("option");
              	option.text = option.value;
              	select.add(option);
            }
        });
        */
    }
  
    function modifySelect(select)
    {
        const selects = document.getElementsByClassName("select__select");
      	const selectContainers = document.getElementsByClassName("product-form__input product-form__input--dropdown");
		const selectIndex = findSelectIndex(select);
        switch (selectorIndex) {
          case 0:
            break;
          case 1:
            buildOptions(select);
            /*if(selects[selectorIndex - 1].selectedIndex == 0){
                selectContainers[selectorIndex].style.display = 'none';
            } else {
                buildOptions(select,selects[selectorIndex - 1].value)
              	selectContainers[selectorIndex].style.display = '';
            }
            */
            break;
          case 2:
            if(selects[selectorIndex - 1].selectedIndex == 0 || selects[selectorIndex - 2].selectedIndex == 0){
                selectContainers[selectorIndex].style.display = 'none';
            } else {
              	selectContainers[selectorIndex].style.display = '';
            }
        }
    }

    const selects = document.getElementsByClassName("select__select");
    switch (selects.length) {
      	case 1:
        	setDefaultOption(selects[0]);
        break;
      	case 2:
        	setDefaultOption(selects[1]);
        	modifySelect(selects[1])
        	selects[0].addEventListener('change', modifySelect(selects[1]));
        break;
      	case 3:
        console.log('3 option');
        break;
    }
  /*
  	if(selects.count > 1){
  		selects[0].addEventListener('change', modifySelect(selects[1]));
    }
  	selects[1].addEventListener('change', modifySelect(selects[2]));
  
    Array.prototype.forEach.call(selects, function(select, i) {
        //setDefaultOption(select,productOptionNames[i]);
        modifySelect(select);
    });

    this.addEventListener('change', this.onVariantChange);

    function onVariantChange() {
        Array.prototype.forEach.call(selects, function(select) {
            modifySelect(select);
        });
    }
    */
</script>